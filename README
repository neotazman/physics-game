# This was made using a tutorial: https://www.youtube.com/watch?v=U34l-Xz5ynU&t=342s

# Other Assets I used
    https://mixkit.co/free-sound-effects/explosion/ -- explosion sound

# Things I changed

 1) i made variables for the canvas size so they would reference each other to be the same dimensions -- i don't think this is gonna matter anymore except for making the overlay and the canvas the same size
    a) also i made sure the overlay had the same dimensions as the canvas

2) i put the classes in a separate file

3) checkCollision returns an object rather than an array to be cleaner and easier when using the values

4) replaced estimates for player sprite with actual values using sliceOfPi

5) instead of just red as the color of particles, i created an array of colors to pick from randomly as well as a random number of particles between 1 and 4 -- edit: the randomize function is still there but the only color is red

6) debug mode starts off
    a) the game won't end in debug mode

7) lostHatchlings contribute to the score -- only changed at the score display

8) enemies push each other away -- i added a ternary into the checkCollision method on the game object so if both game objects are the same, it would always return false; then in the Enemy update method, i spread the enemies array into the collisionObjects array for the checkCollision 


### My own ideas

1)Larva have Abilities
    a) Larva can hit enemies to destroy them -- enemies explode with a sprite and sound




# Notes

! 3/9/2023 1:16:41 in the video

    physics code that i need to figure out
    //NEED TO REMEMBER THE NEXT FOUR LINES
    const unit_x = dx / distance
    const unit_y = dy / distance
    this.collisionX = obstacle.collisionX + (sumOfRadii + 1) * unit_x
    this.collisionY = obstacle.collisionY + (sumOfRadii + 1) * unit_y

the controls respond to events within the canvas, so when the mouse is moved out of the canvas while the mouse isPressed, and you release the mouse, it won't change the isPressed property until you click inside the canvas -- I tried to add the event listener onto the window, which fixed the isPressed bug, but when you press outside the canvas it screws up the mouse position; that way might work down the line if i set an if statement inside the window event listener to check if it's inside the canvas